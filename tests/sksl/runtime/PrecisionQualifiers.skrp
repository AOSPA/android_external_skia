    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. zero_slot_unmasked             $0 = 0
    4. swizzle_4                      $0..3 = ($0..3).xxxx
    5. copy_4_slots_unmasked          zero = $0..3
    6. copy_constant                  $0 = 0x3F800000 (1.0)
    7. swizzle_4                      $0..3 = ($0..3).xxxx
    8. copy_4_slots_unmasked          one = $0..3
    9. copy_4_constants               $0..3 = colorGreen
   10. copy_4_slots_unmasked          green = $0..3
   11. copy_4_slots_unmasked          $0..3 = green
   12. copy_4_slots_unmasked          $4..7 = one
   13. mul_4_floats                   $0..3 *= $4..7
   14. copy_4_slots_unmasked          $4..7 = zero
   15. add_4_floats                   $0..3 += $4..7
   16. copy_4_slots_masked            green = Mask($0..3)
   17. copy_4_constants               $0..3 = colorRed
   18. copy_4_slots_unmasked          red = $0..3
   19. copy_4_slots_unmasked          $0..3 = red
   20. copy_4_slots_unmasked          $4..7 = zero
   21. add_4_floats                   $0..3 += $4..7
   22. copy_4_slots_unmasked          $4..7 = one
   23. mul_4_floats                   $0..3 *= $4..7
   24. copy_4_slots_masked            red = Mask($0..3)
   25. store_condition_mask           $13 = CondMask
   26. store_condition_mask           $26 = CondMask
   27. store_condition_mask           $31 = CondMask
   28. store_condition_mask           $18 = CondMask
   29. store_condition_mask           $48 = CondMask
   30. store_condition_mask           $36 = CondMask
   31. store_condition_mask           $8 = CondMask
   32. branch_if_no_active_lanes      branch_if_no_active_lanes +19 (#51)
   33. store_return_mask              $9 = RetMask
   34. copy_constant                  $10 = 0x3F000000 (0.5)
   35. copy_slot_unmasked             mp = $10
   36. copy_slot_unmasked             $10 = mp
   37. copy_slot_unmasked             hp = $10
   38. copy_constant                  $10 = 0x00000002 (2.802597e-45)
   39. copy_slot_unmasked             ihp = $10
   40. copy_slot_unmasked             $10 = ihp
   41. copy_slot_unmasked             imp = $10
   42. copy_2_slots_unmasked          $10..11 = mp(0..1)
   43. cmpeq_float                    $10 = equal($10, $11)
   44. copy_2_slots_unmasked          $11..12 = ihp(0..1)
   45. cmpeq_int                      $11 = equal($11, $12)
   46. bitwise_and_int                $10 &= $11
   47. copy_slot_masked               [test_scalar].result = Mask($10)
   48. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   49. load_return_mask               RetMask = $9
   50. copy_slot_unmasked             $9 = [test_scalar].result
   51. zero_slot_unmasked             $37 = 0
   52. merge_condition_mask           CondMask = $8 & $9
   53. branch_if_no_active_lanes      branch_if_no_active_lanes +69 (#122)
   54. store_return_mask              $38 = RetMask
   55. copy_constant                  $39 = 0x40000000 (2.0)
   56. copy_slot_unmasked             $40 = $39
   57. copy_2_slots_unmasked          mp2 = $39..40
   58. copy_2_slots_unmasked          $39..40 = mp2
   59. copy_2_slots_unmasked          hp2 = $39..40
   60. copy_constant                  $39 = 0x40400000 (3.0)
   61. swizzle_3                      $39..41 = ($39..41).xxx
   62. copy_3_slots_unmasked          mp3 = $39..41
   63. copy_3_slots_unmasked          $39..41 = mp3
   64. copy_3_slots_unmasked          hp3 = $39..41
   65. copy_constant                  $39 = 0x40800000 (4.0)
   66. swizzle_4                      $39..42 = ($39..42).xxxx
   67. copy_4_slots_unmasked          mp4 = $39..42
   68. copy_4_slots_unmasked          $39..42 = mp4
   69. copy_4_slots_unmasked          hp4 = $39..42
   70. copy_constant                  $39 = 0x00000002 (2.802597e-45)
   71. copy_slot_unmasked             $40 = $39
   72. copy_2_slots_unmasked          ihp2 = $39..40
   73. copy_2_slots_unmasked          $39..40 = ihp2
   74. copy_2_slots_unmasked          imp2 = $39..40
   75. copy_constant                  $39 = 0x00000003 (4.203895e-45)
   76. swizzle_3                      $39..41 = ($39..41).xxx
   77. copy_3_slots_unmasked          ihp3 = $39..41
   78. copy_3_slots_unmasked          $39..41 = ihp3
   79. copy_3_slots_unmasked          imp3 = $39..41
   80. copy_constant                  $39 = 0x00000004 (5.605194e-45)
   81. swizzle_4                      $39..42 = ($39..42).xxxx
   82. copy_4_slots_unmasked          ihp4 = $39..42
   83. copy_4_slots_unmasked          $39..42 = ihp4
   84. copy_4_slots_unmasked          imp4 = $39..42
   85. copy_4_slots_unmasked          $39..42 = mp2(0..3)
   86. cmpeq_2_floats                 $39..40 = equal($39..40, $41..42)
   87. bitwise_and_int                $39 &= $40
   88. copy_3_slots_unmasked          $40..42 = hp3
   89. copy_3_slots_unmasked          $43..45 = mp3
   90. cmpeq_3_floats                 $40..42 = equal($40..42, $43..45)
   91. bitwise_and_int                $41 &= $42
   92. bitwise_and_int                $40 &= $41
   93. bitwise_and_int                $39 &= $40
   94. copy_4_slots_unmasked          $40..43 = mp4
   95. copy_4_slots_unmasked          $44..47 = hp4
   96. cmpeq_4_floats                 $40..43 = equal($40..43, $44..47)
   97. bitwise_and_2_ints             $40..41 &= $42..43
   98. bitwise_and_int                $40 &= $41
   99. bitwise_and_int                $39 &= $40
  100. copy_2_slots_unmasked          $40..41 = imp2
  101. copy_2_slots_unmasked          $42..43 = ihp2
  102. cmpeq_2_ints                   $40..41 = equal($40..41, $42..43)
  103. bitwise_and_int                $40 &= $41
  104. bitwise_and_int                $39 &= $40
  105. copy_4_slots_unmasked          $40..43 = ihp3(0..3)
  106. copy_2_slots_unmasked          $44..45 = imp3(1..2)
  107. cmpeq_3_ints                   $40..42 = equal($40..42, $43..45)
  108. bitwise_and_int                $41 &= $42
  109. bitwise_and_int                $40 &= $41
  110. bitwise_and_int                $39 &= $40
  111. copy_4_slots_unmasked          $40..43 = imp4
  112. copy_4_slots_unmasked          $44..47 = ihp4
  113. cmpeq_4_ints                   $40..43 = equal($40..43, $44..47)
  114. bitwise_and_2_ints             $40..41 &= $42..43
  115. bitwise_and_int                $40 &= $41
  116. bitwise_and_int                $39 &= $40
  117. copy_slot_masked               [test_vector].result = Mask($39)
  118. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  119. load_return_mask               RetMask = $38
  120. copy_slot_unmasked             $38 = [test_vector].result
  121. copy_slot_masked               $37 = Mask($38)
  122. load_condition_mask            CondMask = $8
  123. zero_slot_unmasked             $49 = 0
  124. merge_condition_mask           CondMask = $36 & $37
  125. branch_if_no_active_lanes      branch_if_no_active_lanes +72 (#197)
  126. store_return_mask              $50 = RetMask
  127. zero_slot_unmasked             $51 = 0
  128. copy_constant                  $52 = 0x40000000 (2.0)
  129. swizzle_4                      $51..54 = ($51..54).yxxy
  130. copy_4_slots_unmasked          mp2 = $51..54
  131. copy_4_slots_unmasked          $51..54 = mp2
  132. copy_4_slots_unmasked          hp2 = $51..54
  133. zero_slot_unmasked             $51 = 0
  134. copy_constant                  $52 = 0x40400000 (3.0)
  135. shuffle                        $51..59 = ($51..59)[1 0 0 0 1 0 0 0 1]
  136. copy_4_slots_unmasked          mp3(0..3) = $51..54
  137. copy_4_slots_unmasked          mp3(4..7) = $55..58
  138. copy_slot_unmasked             mp3(8) = $59
  139. copy_4_slots_unmasked          $51..54 = mp3(0..3)
  140. copy_4_slots_unmasked          $55..58 = mp3(4..7)
  141. copy_slot_unmasked             $59 = mp3(8)
  142. copy_4_slots_unmasked          hp3(0..3) = $51..54
  143. copy_4_slots_unmasked          hp3(4..7) = $55..58
  144. copy_slot_unmasked             hp3(8) = $59
  145. zero_slot_unmasked             $51 = 0
  146. copy_constant                  $52 = 0x40800000 (4.0)
  147. shuffle                        $51..66 = ($51..66)[1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1]
  148. copy_4_slots_unmasked          mp4(0..3) = $51..54
  149. copy_4_slots_unmasked          mp4(4..7) = $55..58
  150. copy_4_slots_unmasked          mp4(8..11) = $59..62
  151. copy_4_slots_unmasked          mp4(12..15) = $63..66
  152. copy_4_slots_unmasked          $51..54 = mp4(0..3)
  153. copy_4_slots_unmasked          $55..58 = mp4(4..7)
  154. copy_4_slots_unmasked          $59..62 = mp4(8..11)
  155. copy_4_slots_unmasked          $63..66 = mp4(12..15)
  156. copy_4_slots_unmasked          hp4(0..3) = $51..54
  157. copy_4_slots_unmasked          hp4(4..7) = $55..58
  158. copy_4_slots_unmasked          hp4(8..11) = $59..62
  159. copy_4_slots_unmasked          hp4(12..15) = $63..66
  160. copy_4_slots_unmasked          $51..54 = mp2
  161. copy_4_slots_unmasked          $55..58 = hp2
  162. cmpeq_4_floats                 $51..54 = equal($51..54, $55..58)
  163. bitwise_and_2_ints             $51..52 &= $53..54
  164. bitwise_and_int                $51 &= $52
  165. copy_4_slots_unmasked          $52..55 = hp3(0..3)
  166. copy_4_slots_unmasked          $56..59 = hp3(4..7)
  167. copy_slot_unmasked             $60 = hp3(8)
  168. copy_4_slots_unmasked          $61..64 = mp3(0..3)
  169. copy_4_slots_unmasked          $65..68 = mp3(4..7)
  170. copy_slot_unmasked             $69 = mp3(8)
  171. cmpeq_n_floats                 $52..60 = equal($52..60, $61..69)
  172. bitwise_and_4_ints             $53..56 &= $57..60
  173. bitwise_and_2_ints             $53..54 &= $55..56
  174. bitwise_and_int                $53 &= $54
  175. bitwise_and_int                $52 &= $53
  176. bitwise_and_int                $51 &= $52
  177. copy_4_slots_unmasked          $52..55 = mp4(0..3)
  178. copy_4_slots_unmasked          $56..59 = mp4(4..7)
  179. copy_4_slots_unmasked          $60..63 = mp4(8..11)
  180. copy_4_slots_unmasked          $64..67 = mp4(12..15)
  181. copy_4_slots_unmasked          $68..71 = hp4(0..3)
  182. copy_4_slots_unmasked          $72..75 = hp4(4..7)
  183. copy_4_slots_unmasked          $76..79 = hp4(8..11)
  184. copy_4_slots_unmasked          $80..83 = hp4(12..15)
  185. cmpeq_n_floats                 $52..67 = equal($52..67, $68..83)
  186. bitwise_and_4_ints             $60..63 &= $64..67
  187. bitwise_and_4_ints             $56..59 &= $60..63
  188. bitwise_and_4_ints             $52..55 &= $56..59
  189. bitwise_and_2_ints             $52..53 &= $54..55
  190. bitwise_and_int                $52 &= $53
  191. bitwise_and_int                $51 &= $52
  192. copy_slot_masked               [test_matrix].result = Mask($51)
  193. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  194. load_return_mask               RetMask = $50
  195. copy_slot_unmasked             $50 = [test_matrix].result
  196. copy_slot_masked               $49 = Mask($50)
  197. load_condition_mask            CondMask = $36
  198. zero_slot_unmasked             $19 = 0
  199. merge_condition_mask           CondMask = $48 & $49
  200. branch_if_no_active_lanes      branch_if_no_active_lanes +39 (#239)
  201. store_return_mask              $20 = RetMask
  202. zero_slot_unmasked             mf[0] = 0
  203. copy_constant                  $21 = 0x3F800000 (1.0)
  204. copy_slot_masked               mf[0] = Mask($21)
  205. zero_slot_unmasked             hf[0] = 0
  206. copy_constant                  $21 = 0x3F800000 (1.0)
  207. copy_slot_masked               hf[0] = Mask($21)
  208. zero_4_slots_unmasked          mv[0](0..3) = 0
  209. zero_slot_unmasked             $21 = 0
  210. copy_constant                  $22 = 0x3F800000 (1.0)
  211. copy_2_slots_masked            mv[0] = Mask($21..22)
  212. copy_constant                  $21 = 0x40000000 (2.0)
  213. copy_constant                  $22 = 0x40400000 (3.0)
  214. copy_2_slots_masked            mv[1] = Mask($21..22)
  215. zero_4_slots_unmasked          hv[0](0..3) = 0
  216. zero_slot_unmasked             $21 = 0
  217. copy_constant                  $22 = 0x3F800000 (1.0)
  218. copy_2_slots_masked            hv[0] = Mask($21..22)
  219. copy_constant                  $21 = 0x40000000 (2.0)
  220. copy_constant                  $22 = 0x40400000 (3.0)
  221. copy_2_slots_masked            hv[1] = Mask($21..22)
  222. copy_2_slots_unmasked          $21..22 = mf[0](0..1)
  223. cmpeq_float                    $21 = equal($21, $22)
  224. copy_2_slots_unmasked          $22..23 = hv[0]
  225. copy_2_slots_unmasked          $24..25 = mv[0]
  226. cmpeq_2_floats                 $22..23 = equal($22..23, $24..25)
  227. bitwise_and_int                $22 &= $23
  228. bitwise_and_int                $21 &= $22
  229. copy_2_slots_unmasked          $22..23 = mv[1]
  230. copy_2_slots_unmasked          $24..25 = hv[1]
  231. cmpeq_2_floats                 $22..23 = equal($22..23, $24..25)
  232. bitwise_and_int                $22 &= $23
  233. bitwise_and_int                $21 &= $22
  234. copy_slot_masked               [test_array].result = Mask($21)
  235. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  236. load_return_mask               RetMask = $20
  237. copy_slot_unmasked             $20 = [test_array].result
  238. copy_slot_masked               $19 = Mask($20)
  239. load_condition_mask            CondMask = $48
  240. zero_slot_unmasked             $32 = 0
  241. merge_condition_mask           CondMask = $18 & $19
  242. branch_if_no_active_lanes      branch_if_no_active_lanes +12 (#254)
  243. store_return_mask              $33 = RetMask
  244. copy_constant                  $34 = 0x3F800000 (1.0)
  245. copy_slot_unmasked             value = $34
  246. copy_slot_unmasked             $34 = value
  247. copy_constant                  $35 = 0x3F800000 (1.0)
  248. cmpeq_float                    $34 = equal($34, $35)
  249. copy_slot_masked               [highp_param].result = Mask($34)
  250. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  251. load_return_mask               RetMask = $33
  252. copy_slot_unmasked             $33 = [highp_param].result
  253. copy_slot_masked               $32 = Mask($33)
  254. load_condition_mask            CondMask = $18
  255. zero_slot_unmasked             $27 = 0
  256. merge_condition_mask           CondMask = $31 & $32
  257. branch_if_no_active_lanes      branch_if_no_active_lanes +12 (#269)
  258. store_return_mask              $28 = RetMask
  259. copy_constant                  $29 = 0x40000000 (2.0)
  260. copy_slot_unmasked             value = $29
  261. copy_slot_unmasked             $29 = value
  262. copy_constant                  $30 = 0x40000000 (2.0)
  263. cmpeq_float                    $29 = equal($29, $30)
  264. copy_slot_masked               [mediump_param].result = Mask($29)
  265. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  266. load_return_mask               RetMask = $28
  267. copy_slot_unmasked             $28 = [mediump_param].result
  268. copy_slot_masked               $27 = Mask($28)
  269. load_condition_mask            CondMask = $31
  270. zero_slot_unmasked             $14 = 0
  271. merge_condition_mask           CondMask = $26 & $27
  272. branch_if_no_active_lanes      branch_if_no_active_lanes +12 (#284)
  273. store_return_mask              $15 = RetMask
  274. copy_constant                  $16 = 0x40400000 (3.0)
  275. copy_slot_unmasked             value = $16
  276. copy_slot_unmasked             $16 = value
  277. copy_constant                  $17 = 0x40400000 (3.0)
  278. cmpeq_float                    $16 = equal($16, $17)
  279. copy_slot_masked               [lowp_param].result = Mask($16)
  280. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  281. load_return_mask               RetMask = $15
  282. copy_slot_unmasked             $15 = [lowp_param].result
  283. copy_slot_masked               $14 = Mask($15)
  284. load_condition_mask            CondMask = $26
  285. copy_4_slots_unmasked          $0..3 = red
  286. merge_condition_mask           CondMask = $13 & $14
  287. copy_4_slots_unmasked          $4..7 = green
  288. copy_4_slots_masked            $0..3 = Mask($4..7)
  289. load_condition_mask            CondMask = $13
  290. copy_4_slots_masked            [main].result = Mask($0..3)
  291. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  292. load_src                       src.rgba = [main].result
