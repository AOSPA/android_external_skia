    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. copy_constant                  $0 = colorWhite(0)
    4. copy_slot_unmasked             _0_x = $0
    5. zero_slot_unmasked             $0 = 0
    6. copy_slot_unmasked             $1 = _0_x
    7. sub_float                      $0 -= $1
    8. copy_slot_masked               _0_x = Mask($0)
    9. store_condition_mask           $11 = CondMask
   10. store_condition_mask           $53 = CondMask
   11. store_condition_mask           $74 = CondMask
   12. store_condition_mask           $46 = CondMask
   13. store_condition_mask           $90 = CondMask
   14. store_condition_mask           $85 = CondMask
   15. store_condition_mask           $8 = CondMask
   16. copy_slot_unmasked             $9 = _0_x
   17. copy_constant                  $10 = 0xBF800000 (-1.0)
   18. cmpeq_float                    $9 = equal($9, $10)
   19. zero_slot_unmasked             $86 = 0
   20. merge_condition_mask           CondMask = $8 & $9
   21. branch_if_no_active_lanes      branch_if_no_active_lanes +17 (#38)
   22. store_return_mask              $87 = RetMask
   23. copy_constant                  $88 = colorWhite(0)
   24. cast_to_int_from_float         $88 = FloatToInt($88)
   25. copy_slot_unmasked             x = $88
   26. zero_slot_unmasked             $88 = 0
   27. copy_slot_unmasked             $89 = x
   28. sub_int                        $88 -= $89
   29. copy_slot_masked               x = Mask($88)
   30. copy_slot_unmasked             $88 = x
   31. copy_constant                  $89 = 0xFFFFFFFF
   32. cmpeq_int                      $88 = equal($88, $89)
   33. copy_slot_masked               [test_iscalar].result = Mask($88)
   34. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   35. load_return_mask               RetMask = $87
   36. copy_slot_unmasked             $87 = [test_iscalar].result
   37. copy_slot_masked               $86 = Mask($87)
   38. load_condition_mask            CondMask = $8
   39. zero_slot_unmasked             $91 = 0
   40. merge_condition_mask           CondMask = $85 & $86
   41. branch_if_no_active_lanes      branch_if_no_active_lanes +18 (#59)
   42. store_return_mask              $92 = RetMask
   43. copy_2_constants               $93..94 = colorWhite(0..1)
   44. copy_2_slots_unmasked          x = $93..94
   45. zero_2_slots_unmasked          $93..94 = 0
   46. copy_2_slots_unmasked          $95..96 = x
   47. sub_2_floats                   $93..94 -= $95..96
   48. copy_2_slots_masked            x = Mask($93..94)
   49. copy_2_slots_unmasked          $93..94 = x
   50. copy_constant                  $95 = 0xBF800000 (-1.0)
   51. copy_slot_unmasked             $96 = $95
   52. cmpeq_2_floats                 $93..94 = equal($93..94, $95..96)
   53. bitwise_and_int                $93 &= $94
   54. copy_slot_masked               [test_fvec].result = Mask($93)
   55. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   56. load_return_mask               RetMask = $92
   57. copy_slot_unmasked             $92 = [test_fvec].result
   58. copy_slot_masked               $91 = Mask($92)
   59. load_condition_mask            CondMask = $85
   60. zero_slot_unmasked             $47 = 0
   61. merge_condition_mask           CondMask = $90 & $91
   62. branch_if_no_active_lanes      branch_if_no_active_lanes +20 (#82)
   63. store_return_mask              $48 = RetMask
   64. copy_constant                  $49 = colorWhite(0)
   65. cast_to_int_from_float         $49 = FloatToInt($49)
   66. copy_slot_unmasked             $50 = $49
   67. copy_2_slots_unmasked          x = $49..50
   68. zero_2_slots_unmasked          $49..50 = 0
   69. copy_2_slots_unmasked          $51..52 = x
   70. sub_2_ints                     $49..50 -= $51..52
   71. copy_2_slots_masked            x = Mask($49..50)
   72. copy_2_slots_unmasked          $49..50 = x
   73. copy_constant                  $51 = 0xFFFFFFFF
   74. copy_slot_unmasked             $52 = $51
   75. cmpeq_2_ints                   $49..50 = equal($49..50, $51..52)
   76. bitwise_and_int                $49 &= $50
   77. copy_slot_masked               [test_ivec].result = Mask($49)
   78. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   79. load_return_mask               RetMask = $48
   80. copy_slot_unmasked             $48 = [test_ivec].result
   81. copy_slot_masked               $47 = Mask($48)
   82. load_condition_mask            CondMask = $90
   83. zero_slot_unmasked             $75 = 0
   84. merge_condition_mask           CondMask = $46 & $47
   85. branch_if_no_active_lanes      branch_if_no_active_lanes +23 (#108)
   86. store_return_mask              $76 = RetMask
   87. copy_constant                  $77 = 0xBF800000 (-1.0)
   88. copy_constant                  $78 = 0xC0000000 (-2.0)
   89. copy_constant                  $79 = 0xC0400000 (-3.0)
   90. copy_constant                  $80 = 0xC0800000 (-4.0)
   91. copy_4_slots_unmasked          negated = $77..80
   92. copy_4_constants               $77..80 = testMatrix2x2
   93. copy_4_slots_unmasked          x = $77..80
   94. zero_4_slots_unmasked          $77..80 = 0
   95. copy_4_slots_unmasked          $81..84 = x
   96. sub_4_floats                   $77..80 -= $81..84
   97. copy_4_slots_masked            x = Mask($77..80)
   98. copy_4_slots_unmasked          $77..80 = x
   99. copy_4_slots_unmasked          $81..84 = negated
  100. cmpeq_4_floats                 $77..80 = equal($77..80, $81..84)
  101. bitwise_and_2_ints             $77..78 &= $79..80
  102. bitwise_and_int                $77 &= $78
  103. copy_slot_masked               [test_mat2].result = Mask($77)
  104. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  105. load_return_mask               RetMask = $76
  106. copy_slot_unmasked             $76 = [test_mat2].result
  107. copy_slot_masked               $75 = Mask($76)
  108. load_condition_mask            CondMask = $46
  109. zero_slot_unmasked             $54 = 0
  110. merge_condition_mask           CondMask = $74 & $75
  111. branch_if_no_active_lanes      branch_if_no_active_lanes +46 (#157)
  112. store_return_mask              $55 = RetMask
  113. copy_constant                  $56 = 0xBF800000 (-1.0)
  114. copy_constant                  $57 = 0xC0000000 (-2.0)
  115. copy_constant                  $58 = 0xC0400000 (-3.0)
  116. copy_constant                  $59 = 0xC0800000 (-4.0)
  117. copy_constant                  $60 = 0xC0A00000 (-5.0)
  118. copy_constant                  $61 = 0xC0C00000 (-6.0)
  119. copy_constant                  $62 = 0xC0E00000 (-7.0)
  120. copy_constant                  $63 = 0xC1000000 (-8.0)
  121. copy_constant                  $64 = 0xC1100000 (-9.0)
  122. copy_4_slots_unmasked          negated(0..3) = $56..59
  123. copy_4_slots_unmasked          negated(4..7) = $60..63
  124. copy_slot_unmasked             negated(8) = $64
  125. copy_4_constants               $56..59 = testMatrix3x3(0..3)
  126. copy_4_constants               $60..63 = testMatrix3x3(4..7)
  127. copy_constant                  $64 = testMatrix3x3(8)
  128. copy_4_slots_unmasked          x(0..3) = $56..59
  129. copy_4_slots_unmasked          x(4..7) = $60..63
  130. copy_slot_unmasked             x(8) = $64
  131. zero_4_slots_unmasked          $56..59 = 0
  132. zero_4_slots_unmasked          $60..63 = 0
  133. zero_slot_unmasked             $64 = 0
  134. copy_4_slots_unmasked          $65..68 = x(0..3)
  135. copy_4_slots_unmasked          $69..72 = x(4..7)
  136. copy_slot_unmasked             $73 = x(8)
  137. sub_n_floats                   $56..64 -= $65..73
  138. copy_4_slots_masked            x(0..3) = Mask($56..59)
  139. copy_4_slots_masked            x(4..7) = Mask($60..63)
  140. copy_slot_masked               x(8) = Mask($64)
  141. copy_4_slots_unmasked          $56..59 = x(0..3)
  142. copy_4_slots_unmasked          $60..63 = x(4..7)
  143. copy_slot_unmasked             $64 = x(8)
  144. copy_4_slots_unmasked          $65..68 = negated(0..3)
  145. copy_4_slots_unmasked          $69..72 = negated(4..7)
  146. copy_slot_unmasked             $73 = negated(8)
  147. cmpeq_n_floats                 $56..64 = equal($56..64, $65..73)
  148. bitwise_and_4_ints             $57..60 &= $61..64
  149. bitwise_and_2_ints             $57..58 &= $59..60
  150. bitwise_and_int                $57 &= $58
  151. bitwise_and_int                $56 &= $57
  152. copy_slot_masked               [test_mat3].result = Mask($56)
  153. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  154. load_return_mask               RetMask = $55
  155. copy_slot_unmasked             $55 = [test_mat3].result
  156. copy_slot_masked               $54 = Mask($55)
  157. load_condition_mask            CondMask = $74
  158. zero_slot_unmasked             $12 = 0
  159. merge_condition_mask           CondMask = $53 & $54
  160. branch_if_no_active_lanes      branch_if_no_active_lanes +62 (#222)
  161. store_return_mask              $13 = RetMask
  162. copy_constant                  $14 = 0xBF800000 (-1.0)
  163. copy_constant                  $15 = 0xC0000000 (-2.0)
  164. copy_constant                  $16 = 0xC0400000 (-3.0)
  165. copy_constant                  $17 = 0xC0800000 (-4.0)
  166. copy_constant                  $18 = 0xC0A00000 (-5.0)
  167. copy_constant                  $19 = 0xC0C00000 (-6.0)
  168. copy_constant                  $20 = 0xC0E00000 (-7.0)
  169. copy_constant                  $21 = 0xC1000000 (-8.0)
  170. copy_constant                  $22 = 0xC1100000 (-9.0)
  171. copy_constant                  $23 = 0xC1200000 (-10.0)
  172. copy_constant                  $24 = 0xC1300000 (-11.0)
  173. copy_constant                  $25 = 0xC1400000 (-12.0)
  174. copy_constant                  $26 = 0xC1500000 (-13.0)
  175. copy_constant                  $27 = 0xC1600000 (-14.0)
  176. copy_constant                  $28 = 0xC1700000 (-15.0)
  177. copy_constant                  $29 = 0xC1800000 (-16.0)
  178. copy_4_slots_unmasked          negated(0..3) = $14..17
  179. copy_4_slots_unmasked          negated(4..7) = $18..21
  180. copy_4_slots_unmasked          negated(8..11) = $22..25
  181. copy_4_slots_unmasked          negated(12..15) = $26..29
  182. copy_4_constants               $14..17 = testMatrix4x4(0..3)
  183. copy_4_constants               $18..21 = testMatrix4x4(4..7)
  184. copy_4_constants               $22..25 = testMatrix4x4(8..11)
  185. copy_4_constants               $26..29 = testMatrix4x4(12..15)
  186. copy_4_slots_unmasked          x(0..3) = $14..17
  187. copy_4_slots_unmasked          x(4..7) = $18..21
  188. copy_4_slots_unmasked          x(8..11) = $22..25
  189. copy_4_slots_unmasked          x(12..15) = $26..29
  190. zero_4_slots_unmasked          $14..17 = 0
  191. zero_4_slots_unmasked          $18..21 = 0
  192. zero_4_slots_unmasked          $22..25 = 0
  193. zero_4_slots_unmasked          $26..29 = 0
  194. copy_4_slots_unmasked          $30..33 = x(0..3)
  195. copy_4_slots_unmasked          $34..37 = x(4..7)
  196. copy_4_slots_unmasked          $38..41 = x(8..11)
  197. copy_4_slots_unmasked          $42..45 = x(12..15)
  198. sub_n_floats                   $14..29 -= $30..45
  199. copy_4_slots_masked            x(0..3) = Mask($14..17)
  200. copy_4_slots_masked            x(4..7) = Mask($18..21)
  201. copy_4_slots_masked            x(8..11) = Mask($22..25)
  202. copy_4_slots_masked            x(12..15) = Mask($26..29)
  203. copy_4_slots_unmasked          $14..17 = x(0..3)
  204. copy_4_slots_unmasked          $18..21 = x(4..7)
  205. copy_4_slots_unmasked          $22..25 = x(8..11)
  206. copy_4_slots_unmasked          $26..29 = x(12..15)
  207. copy_4_slots_unmasked          $30..33 = negated(0..3)
  208. copy_4_slots_unmasked          $34..37 = negated(4..7)
  209. copy_4_slots_unmasked          $38..41 = negated(8..11)
  210. copy_4_slots_unmasked          $42..45 = negated(12..15)
  211. cmpeq_n_floats                 $14..29 = equal($14..29, $30..45)
  212. bitwise_and_4_ints             $22..25 &= $26..29
  213. bitwise_and_4_ints             $18..21 &= $22..25
  214. bitwise_and_4_ints             $14..17 &= $18..21
  215. bitwise_and_2_ints             $14..15 &= $16..17
  216. bitwise_and_int                $14 &= $15
  217. copy_slot_masked               [test_mat4].result = Mask($14)
  218. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  219. load_return_mask               RetMask = $13
  220. copy_slot_unmasked             $13 = [test_mat4].result
  221. copy_slot_masked               $12 = Mask($13)
  222. load_condition_mask            CondMask = $53
  223. copy_4_constants               $0..3 = colorRed
  224. merge_condition_mask           CondMask = $11 & $12
  225. copy_4_constants               $4..7 = colorGreen
  226. copy_4_slots_masked            $0..3 = Mask($4..7)
  227. load_condition_mask            CondMask = $11
  228. copy_4_slots_masked            [main].result = Mask($0..3)
  229. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  230. load_src                       src.rgba = [main].result
