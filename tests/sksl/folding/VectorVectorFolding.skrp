    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. copy_constant                  $0 = unknownInput
    4. copy_slot_unmasked             _0_unknown = $0
    5. copy_constant                  $0 = 0xFFFFFFFF
    6. copy_slot_unmasked             _1_ok = $0
    7. copy_slot_unmasked             $0 = _1_ok
    8. zero_slot_unmasked             $1 = 0
    9. swizzle_4                      $1..4 = ($1..4).xxxx
   10. copy_slot_unmasked             $5 = _0_unknown
   11. swizzle_4                      $5..8 = ($5..8).xxxx
   12. div_4_floats                   $1..4 /= $5..8
   13. zero_slot_unmasked             $5 = 0
   14. swizzle_4                      $5..8 = ($5..8).xxxx
   15. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
   16. bitwise_and_2_ints             $1..2 &= $3..4
   17. bitwise_and_int                $1 &= $2
   18. bitwise_and_int                $0 &= $1
   19. copy_slot_masked               _1_ok = Mask($0)
   20. copy_slot_unmasked             $0 = _0_unknown
   21. swizzle_4                      $0..3 = ($0..3).xxxx
   22. copy_4_slots_unmasked          _2_val = $0..3
   23. copy_4_slots_unmasked          $0..3 = _2_val
   24. copy_constant                  $4 = 0x3F800000 (1.0)
   25. swizzle_4                      $4..7 = ($4..7).xxxx
   26. add_4_floats                   $0..3 += $4..7
   27. copy_4_slots_masked            _2_val = Mask($0..3)
   28. copy_4_slots_unmasked          $0..3 = _2_val
   29. copy_constant                  $4 = 0x3F800000 (1.0)
   30. swizzle_4                      $4..7 = ($4..7).xxxx
   31. sub_4_floats                   $0..3 -= $4..7
   32. copy_4_slots_masked            _2_val = Mask($0..3)
   33. copy_4_slots_unmasked          $0..3 = _2_val
   34. copy_constant                  $4 = 0x3F800000 (1.0)
   35. swizzle_4                      $4..7 = ($4..7).xxxx
   36. add_4_floats                   $0..3 += $4..7
   37. copy_4_slots_masked            _2_val = Mask($0..3)
   38. copy_4_slots_unmasked          $0..3 = _2_val
   39. copy_constant                  $4 = 0x3F800000 (1.0)
   40. swizzle_4                      $4..7 = ($4..7).xxxx
   41. sub_4_floats                   $0..3 -= $4..7
   42. copy_4_slots_masked            _2_val = Mask($0..3)
   43. copy_4_slots_unmasked          $0..3 = _1_ok(0..3)
   44. copy_slot_unmasked             $4 = _2_val(3)
   45. copy_slot_unmasked             $5 = _0_unknown
   46. swizzle_4                      $5..8 = ($5..8).xxxx
   47. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
   48. bitwise_and_2_ints             $1..2 &= $3..4
   49. bitwise_and_int                $1 &= $2
   50. bitwise_and_int                $0 &= $1
   51. copy_slot_masked               _1_ok = Mask($0)
   52. copy_4_slots_unmasked          $0..3 = _2_val
   53. copy_constant                  $4 = 0x40000000 (2.0)
   54. swizzle_4                      $4..7 = ($4..7).xxxx
   55. mul_4_floats                   $0..3 *= $4..7
   56. copy_4_slots_masked            _2_val = Mask($0..3)
   57. copy_4_slots_unmasked          $0..3 = _2_val
   58. copy_constant                  $4 = 0x40000000 (2.0)
   59. swizzle_4                      $4..7 = ($4..7).xxxx
   60. div_4_floats                   $0..3 /= $4..7
   61. copy_4_slots_masked            _2_val = Mask($0..3)
   62. copy_4_slots_unmasked          $0..3 = _2_val
   63. copy_constant                  $4 = 0x40000000 (2.0)
   64. swizzle_4                      $4..7 = ($4..7).xxxx
   65. mul_4_floats                   $0..3 *= $4..7
   66. copy_4_slots_masked            _2_val = Mask($0..3)
   67. copy_4_slots_unmasked          $0..3 = _2_val
   68. copy_constant                  $4 = 0x40000000 (2.0)
   69. swizzle_4                      $4..7 = ($4..7).xxxx
   70. div_4_floats                   $0..3 /= $4..7
   71. copy_4_slots_masked            _2_val = Mask($0..3)
   72. copy_4_slots_unmasked          $0..3 = _1_ok(0..3)
   73. copy_slot_unmasked             $4 = _2_val(3)
   74. copy_slot_unmasked             $5 = _0_unknown
   75. swizzle_4                      $5..8 = ($5..8).xxxx
   76. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
   77. bitwise_and_2_ints             $1..2 &= $3..4
   78. bitwise_and_int                $1 &= $2
   79. bitwise_and_int                $0 &= $1
   80. copy_slot_masked               _1_ok = Mask($0)
   81. store_condition_mask           $11 = CondMask
   82. store_condition_mask           $9 = CondMask
   83. copy_slot_unmasked             $10 = _1_ok
   84. zero_slot_unmasked             $12 = 0
   85. merge_condition_mask           CondMask = $9 & $10
   86. branch_if_no_active_lanes      branch_if_no_active_lanes +87 (#173)
   87. store_return_mask              $13 = RetMask
   88. copy_constant                  $14 = unknownInput
   89. cast_to_int_from_float         $14 = FloatToInt($14)
   90. copy_slot_unmasked             unknown = $14
   91. copy_constant                  $14 = 0xFFFFFFFF
   92. copy_slot_unmasked             ok = $14
   93. copy_slot_unmasked             $14 = ok
   94. zero_slot_unmasked             $15 = 0
   95. swizzle_4                      $15..18 = ($15..18).xxxx
   96. copy_slot_unmasked             $19 = unknown
   97. swizzle_4                      $19..22 = ($19..22).xxxx
   98. div_4_ints                     $15..18 /= $19..22
   99. zero_slot_unmasked             $19 = 0
  100. swizzle_4                      $19..22 = ($19..22).xxxx
  101. cmpeq_4_ints                   $15..18 = equal($15..18, $19..22)
  102. bitwise_and_2_ints             $15..16 &= $17..18
  103. bitwise_and_int                $15 &= $16
  104. bitwise_and_int                $14 &= $15
  105. copy_slot_masked               ok = Mask($14)
  106. copy_slot_unmasked             $14 = unknown
  107. swizzle_4                      $14..17 = ($14..17).xxxx
  108. copy_4_slots_unmasked          val = $14..17
  109. copy_4_slots_unmasked          $14..17 = val
  110. copy_constant                  $18 = 0x00000001 (1.401298e-45)
  111. swizzle_4                      $18..21 = ($18..21).xxxx
  112. add_4_ints                     $14..17 += $18..21
  113. copy_4_slots_masked            val = Mask($14..17)
  114. copy_4_slots_unmasked          $14..17 = val
  115. copy_constant                  $18 = 0x00000001 (1.401298e-45)
  116. swizzle_4                      $18..21 = ($18..21).xxxx
  117. sub_4_ints                     $14..17 -= $18..21
  118. copy_4_slots_masked            val = Mask($14..17)
  119. copy_4_slots_unmasked          $14..17 = val
  120. copy_constant                  $18 = 0x00000001 (1.401298e-45)
  121. swizzle_4                      $18..21 = ($18..21).xxxx
  122. add_4_ints                     $14..17 += $18..21
  123. copy_4_slots_masked            val = Mask($14..17)
  124. copy_4_slots_unmasked          $14..17 = val
  125. copy_constant                  $18 = 0x00000001 (1.401298e-45)
  126. swizzle_4                      $18..21 = ($18..21).xxxx
  127. sub_4_ints                     $14..17 -= $18..21
  128. copy_4_slots_masked            val = Mask($14..17)
  129. copy_4_slots_unmasked          $14..17 = ok(0..3)
  130. copy_slot_unmasked             $18 = val(3)
  131. copy_slot_unmasked             $19 = unknown
  132. swizzle_4                      $19..22 = ($19..22).xxxx
  133. cmpeq_4_ints                   $15..18 = equal($15..18, $19..22)
  134. bitwise_and_2_ints             $15..16 &= $17..18
  135. bitwise_and_int                $15 &= $16
  136. bitwise_and_int                $14 &= $15
  137. copy_slot_masked               ok = Mask($14)
  138. copy_4_slots_unmasked          $14..17 = val
  139. copy_constant                  $18 = 0x00000002 (2.802597e-45)
  140. swizzle_4                      $18..21 = ($18..21).xxxx
  141. mul_4_ints                     $14..17 *= $18..21
  142. copy_4_slots_masked            val = Mask($14..17)
  143. copy_4_slots_unmasked          $14..17 = val
  144. copy_constant                  $18 = 0x00000002 (2.802597e-45)
  145. swizzle_4                      $18..21 = ($18..21).xxxx
  146. div_4_ints                     $14..17 /= $18..21
  147. copy_4_slots_masked            val = Mask($14..17)
  148. copy_4_slots_unmasked          $14..17 = val
  149. copy_constant                  $18 = 0x00000002 (2.802597e-45)
  150. swizzle_4                      $18..21 = ($18..21).xxxx
  151. mul_4_ints                     $14..17 *= $18..21
  152. copy_4_slots_masked            val = Mask($14..17)
  153. copy_4_slots_unmasked          $14..17 = val
  154. copy_constant                  $18 = 0x00000002 (2.802597e-45)
  155. swizzle_4                      $18..21 = ($18..21).xxxx
  156. div_4_ints                     $14..17 /= $18..21
  157. copy_4_slots_masked            val = Mask($14..17)
  158. copy_4_slots_unmasked          $14..17 = ok(0..3)
  159. copy_slot_unmasked             $18 = val(3)
  160. copy_slot_unmasked             $19 = unknown
  161. swizzle_4                      $19..22 = ($19..22).xxxx
  162. cmpeq_4_ints                   $15..18 = equal($15..18, $19..22)
  163. bitwise_and_2_ints             $15..16 &= $17..18
  164. bitwise_and_int                $15 &= $16
  165. bitwise_and_int                $14 &= $15
  166. copy_slot_masked               ok = Mask($14)
  167. copy_slot_unmasked             $14 = ok
  168. copy_slot_masked               [test_int].result = Mask($14)
  169. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  170. load_return_mask               RetMask = $13
  171. copy_slot_unmasked             $13 = [test_int].result
  172. copy_slot_masked               $12 = Mask($13)
  173. load_condition_mask            CondMask = $9
  174. copy_4_constants               $0..3 = colorRed
  175. merge_condition_mask           CondMask = $11 & $12
  176. copy_4_constants               $4..7 = colorGreen
  177. copy_4_slots_masked            $0..3 = Mask($4..7)
  178. load_condition_mask            CondMask = $11
  179. copy_4_slots_masked            [main].result = Mask($0..3)
  180. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  181. load_src                       src.rgba = [main].result
