    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. copy_constant                  $0 = 0xFFFFFFFF
    4. copy_slot_unmasked             _0_ok = $0
    5. store_condition_mask           $12 = CondMask
    6. store_condition_mask           $20 = CondMask
    7. store_condition_mask           $24 = CondMask
    8. store_condition_mask           $16 = CondMask
    9. store_condition_mask           $34 = CondMask
   10. store_condition_mask           $28 = CondMask
   11. store_condition_mask           $8 = CondMask
   12. store_condition_mask           $32 = CondMask
   13. copy_slot_unmasked             $33 = _0_ok
   14. zero_slot_unmasked             $9 = 0
   15. merge_condition_mask           CondMask = $32 & $33
   16. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#26)
   17. store_return_mask              $10 = RetMask
   18. copy_constant                  $11 = 0xFFFFFFFF
   19. copy_slot_unmasked             ok = $11
   20. copy_slot_unmasked             $11 = ok
   21. copy_slot_masked               [test_eq_half].result = Mask($11)
   22. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   23. load_return_mask               RetMask = $10
   24. copy_slot_unmasked             $10 = [test_eq_half].result
   25. copy_slot_masked               $9 = Mask($10)
   26. load_condition_mask            CondMask = $32
   27. zero_slot_unmasked             $29 = 0
   28. merge_condition_mask           CondMask = $8 & $9
   29. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#39)
   30. store_return_mask              $30 = RetMask
   31. copy_constant                  $31 = 0xFFFFFFFF
   32. copy_slot_unmasked             ok = $31
   33. copy_slot_unmasked             $31 = ok
   34. copy_slot_masked               [test_matrix_op_matrix_float].result = Mask($31)
   35. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   36. load_return_mask               RetMask = $30
   37. copy_slot_unmasked             $30 = [test_matrix_op_matrix_float].result
   38. copy_slot_masked               $29 = Mask($30)
   39. load_condition_mask            CondMask = $8
   40. zero_slot_unmasked             $35 = 0
   41. merge_condition_mask           CondMask = $28 & $29
   42. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#52)
   43. store_return_mask              $36 = RetMask
   44. copy_constant                  $37 = 0xFFFFFFFF
   45. copy_slot_unmasked             ok = $37
   46. copy_slot_unmasked             $37 = ok
   47. copy_slot_masked               [test_matrix_op_matrix_half].result = Mask($37)
   48. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   49. load_return_mask               RetMask = $36
   50. copy_slot_unmasked             $36 = [test_matrix_op_matrix_half].result
   51. copy_slot_masked               $35 = Mask($36)
   52. load_condition_mask            CondMask = $28
   53. zero_slot_unmasked             $17 = 0
   54. merge_condition_mask           CondMask = $34 & $35
   55. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#65)
   56. store_return_mask              $18 = RetMask
   57. copy_constant                  $19 = 0xFFFFFFFF
   58. copy_slot_unmasked             ok = $19
   59. copy_slot_unmasked             $19 = ok
   60. copy_slot_masked               [test_vector_op_matrix_float].result = Mask($19)
   61. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   62. load_return_mask               RetMask = $18
   63. copy_slot_unmasked             $18 = [test_vector_op_matrix_float].result
   64. copy_slot_masked               $17 = Mask($18)
   65. load_condition_mask            CondMask = $34
   66. zero_slot_unmasked             $25 = 0
   67. merge_condition_mask           CondMask = $16 & $17
   68. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#78)
   69. store_return_mask              $26 = RetMask
   70. copy_constant                  $27 = 0xFFFFFFFF
   71. copy_slot_unmasked             ok = $27
   72. copy_slot_unmasked             $27 = ok
   73. copy_slot_masked               [test_vector_op_matrix_half].result = Mask($27)
   74. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   75. load_return_mask               RetMask = $26
   76. copy_slot_unmasked             $26 = [test_vector_op_matrix_half].result
   77. copy_slot_masked               $25 = Mask($26)
   78. load_condition_mask            CondMask = $16
   79. zero_slot_unmasked             $21 = 0
   80. merge_condition_mask           CondMask = $24 & $25
   81. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#91)
   82. store_return_mask              $22 = RetMask
   83. copy_constant                  $23 = 0xFFFFFFFF
   84. copy_slot_unmasked             ok = $23
   85. copy_slot_unmasked             $23 = ok
   86. copy_slot_masked               [test_matrix_op_vector_float].result = Mask($23)
   87. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   88. load_return_mask               RetMask = $22
   89. copy_slot_unmasked             $22 = [test_matrix_op_vector_float].result
   90. copy_slot_masked               $21 = Mask($22)
   91. load_condition_mask            CondMask = $24
   92. zero_slot_unmasked             $13 = 0
   93. merge_condition_mask           CondMask = $20 & $21
   94. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#104)
   95. store_return_mask              $14 = RetMask
   96. copy_constant                  $15 = 0xFFFFFFFF
   97. copy_slot_unmasked             ok = $15
   98. copy_slot_unmasked             $15 = ok
   99. copy_slot_masked               [test_matrix_op_vector_half].result = Mask($15)
  100. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  101. load_return_mask               RetMask = $14
  102. copy_slot_unmasked             $14 = [test_matrix_op_vector_half].result
  103. copy_slot_masked               $13 = Mask($14)
  104. load_condition_mask            CondMask = $20
  105. copy_4_constants               $0..3 = colorRed
  106. merge_condition_mask           CondMask = $12 & $13
  107. copy_4_constants               $4..7 = colorGreen
  108. copy_4_slots_masked            $0..3 = Mask($4..7)
  109. load_condition_mask            CondMask = $12
  110. copy_4_slots_masked            [main].result = Mask($0..3)
  111. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  112. load_src                       src.rgba = [main].result
